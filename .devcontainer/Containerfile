FROM registry.access.redhat.com/ubi9/nodejs-22:9.5-1730543890

WORKDIR /opt/app-root/src

ARG USERNAME=default
ARG NPM_GLOBAL=/usr/local/share/npm-global

# Add NPM global to PATH.
ENV PATH=${NPM_GLOBAL}/bin:${PATH}

USER root

RUN umask 0002 

# DEVX: install zsh, oh-my-zsh, vim, jq
RUN dnf install -y zsh && \
    curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh | bash && \
    sed -i '/^default:/s|:/bin/bash|:/bin/zsh|' /etc/passwd && \
    dnf install -y vim jq

ENV ZSH_DISABLE_COMPFIX="true"

# npm configs + perms
RUN groupadd npm && \
    usermod -a -G npm ${USERNAME} && \
    usermod -a -G npm root && \
    chown -R ${USERNAME}:npm /usr/local/ && \
    mkdir -p /opt/app-root/src/.npm && chown -R ${USERNAME}:npm /opt/app-root/src/ 

# install kubectl
ADD install-kubectl.sh /tmp
RUN /tmp/install-kubectl.sh; \
    rm /tmp/install-kubectl.sh
    
# # install kubseal
# ADD install-kubeseal.sh /tmp
# RUN /tmp/install-kubeseal.sh; \
#     rm /tmp/install-kubeseal.sh

# # # install docker as a dependency of kind
# # # only need the CLI and runtime, binding to host docker socket for access to host docker context
# RUN dnf -y install dnf-plugins-core; \
#     dnf config-manager --add-repo https://download.docker.com/linux/rhel/docker-ce.repo; \
#     dnf install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

# # install kind
# ADD install-kind.sh /tmp
# RUN /tmp/install-kind.sh; \
#     rm /tmp/install-kind.sh

# # symlink oc because cannot install stable stream without RH auth
# RUN ln -sf /usr/local/bin/kubectl /usr/local/bin/oc 

# USER default

# ADD shell-completions.sh /tmp
# RUN /tmp/shell-completions.sh && \
#     zsh -c "source ~/.zshrc"

# RUN umask 0002 && \
#     mkdir -p ${NPM_GLOBAL} && \
#     touch /usr/local/etc/npmrc 

# USER root

# RUN chown ${USERNAME}:npm ${NPM_GLOBAL} /usr/local/etc/npmrc && \
#     chmod g+s ${NPM_GLOBAL}  && \
#     npm config -g set prefix ${NPM_GLOBAL} 

# # install linting tools
# RUN dnf install -y python3-pip

# RUN bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash) && \
#     mv /opt/app-root/src/actionlint /usr/local/bin

# USER default

# RUN pip install yamllint

# ARG NODE_MODULES="tslint-to-eslint-config typescript"
# RUN npm install -g eslint && \
#     npm install -g markdownlint-cli2 && \
#     npm install -g ${NODE_MODULES} && \
#     npm cache clean --force > /dev/null 2>&1

# WORKDIR /workspaces/ui

# # ENTRYPOINT ["/tmp/shell-completions.sh", "&&", "source /opt/app-root/.zshrc", "&&", "npm", "install"]
# # ENTRYPOINT ["source /opt/app-root/.zshrc", "&&", "npm", "install"]
# ENTRYPOINT ["npm", "install"]

# EXPOSE 3000/tcp
# EXPOSE 6443/tcp
